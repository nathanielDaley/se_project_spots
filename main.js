!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error"},t=(e,t,r)=>{const n=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),n.textContent=""},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?n(t,r):(t.classList.remove(r.inactiveButtonClass),t.disabled=!1)},n=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},o="card__like-btn_liked",a="modal_opened",s="Saving...",i="Save",l=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error sending fetch request: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editUserAvatar(e){let{avatar:t}=e;return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})})}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}addCard(e){let{name:t,link:r}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){let{id:t}=e;return this._request(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:this._headers})}changeCardLikeStatus(e){let{id:t,isLiked:r}=e;const n=r?"DELETE":"PUT";return this._request(`${this._baseUrl}/cards/${t}/likes`,{method:n,headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f7822124-59b5-42fe-a8b8-2f48bd0b923b","Content-Type":"application/json"}}),c=document.querySelector(".profile__edit-btn"),d=document.querySelector(".profile__add-btn"),u=document.querySelector(".profile__name"),m=document.querySelector(".profile__description"),_=document.querySelector(".profile__avatar"),h=document.querySelector(".profile__avatar-btn"),v=document.querySelector("#edit-profile-modal"),f=document.forms["edit-profile-form"],p=f.querySelector(".modal__submit-btn"),y=v.querySelector(".modal__input#name-input"),S=v.querySelector(".modal__input#description-input"),b=document.querySelector("#edit-profile-avatar-modal"),q=document.forms["edit-profile-avatar-form"],C=q.querySelector(".modal__submit-btn"),L=b.querySelector(".modal__input#avatar-link-input"),k=document.querySelector("#new-post-modal"),E=document.forms["new-post-form"],g=E.querySelector(".modal__submit-btn"),x=k.querySelector(".modal__input#image-link-input"),U=k.querySelector(".modal__input#caption-input"),$=document.querySelector("#delete-modal"),A=$.querySelector(".modal__delete-btn"),D=$.querySelector(".modal__cancel-btn"),T=document.querySelector("#preview-modal"),I=T.querySelector(".modal__image"),w=T.querySelector(".modal__caption"),P=document.querySelectorAll(".modal__close-btn"),B=document.querySelector("#card"),N=document.querySelector(".cards__list");let O,j;function J(e){e.classList.add(a),e.focus(),e.addEventListener("click",z),e.addEventListener("keydown",M)}function H(e){e.classList.remove(a),e.removeEventListener("click",z),e.removeEventListener("keydown",M)}function R(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){const t=B.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),a=t.querySelector(".card__like-btn"),s=t.querySelector(".card__delete-btn");return n.src=e.link,n.alt=e.name,r.textContent=e.name,e.isLiked&&a.classList.toggle(o),a.addEventListener("click",(t=>function(e,t){l.changeCardLikeStatus({id:t._id,isLiked:t.isLiked}).then((()=>{e.target.classList.toggle(o)})).catch(console.error)}(t,e))),s.addEventListener("click",(()=>{!function(e,t){O=e,j=t._id,J($)}(t,e)})),n.addEventListener("click",(()=>{I.src=e.link,w.textContent=e.name,I.alt=e.name,J(T)})),t}(e);N[t](r)}function z(e){e.target.classList.contains(a)&&H(e.target)}function M(e){"Escape"===e.key&&H(e.currentTarget)}var F;c.addEventListener("click",(()=>{var r,n;y.value=u.textContent,S.value=m.textContent,r=f,n=e,[y,S].forEach((e=>t(r,e,n))),J(v)})),f.addEventListener("submit",(function(t){t.preventDefault(),p.textContent=s,l.editUserInfo({name:y.value,about:S.value}).then((t=>{u.textContent=t.name,m.textContent=t.about,n(p,e),H(v)})).catch(console.error).finally((()=>{p.textContent=i}))})),h.addEventListener("click",(()=>{J(b)})),q.addEventListener("submit",(function(e){e.preventDefault(),C.textContent=s,console.log("tesT"),l.editUserAvatar({avatar:L.value}).then((t=>{_.src=t.avatar,e.target.reset(),H(b)})).catch(console.error).finally((()=>{C.textContent=i})),console.log()})),d.addEventListener("click",(()=>{J(k)})),E.addEventListener("submit",(function(e){e.preventDefault(),g.textContent=s,l.addCard({name:U.value,link:x.value}).then((t=>{R(t),e.target.reset(),H(k)})).catch(console.error).finally((()=>{g.textContent=i}))})),A.addEventListener("click",(function(e){e.preventDefault(),A.textContent="Deleting...",l.deleteCard({id:j}).then((()=>{O.remove(),H($)})).catch(console.error).finally((()=>{A.textContent="Delete"}))})),D.addEventListener("click",(function(e){e.preventDefault(),H($)})),P.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>H(t)))})),l.getAppInfo().then((e=>{let[t,r]=e;t.forEach((e=>{R(e,"append")})),u.textContent=r.name,m.textContent=r.about,_.src=r.avatar})).catch(console.error),F=e,document.querySelectorAll(F.formSelector).forEach((e=>((e,o)=>{const a=Array.from(e.querySelectorAll(o.inputSelector)),s=e.querySelector(o.submitButtonSelector);r(a,s,o),e.addEventListener("reset",(()=>{n(s,o)})),a.forEach((n=>{n.addEventListener("input",(()=>{((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),o.textContent=r})(e,r,r.validationMessage,n)})(e,n,o),r(a,s,o)}))}))})(e,F)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,