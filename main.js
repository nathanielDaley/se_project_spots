!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error"},t=(e,t,r)=>{const n=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),n.textContent=""},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?n(t,r):(t.classList.remove(r.inactiveButtonClass),t.disabled=!1)},n=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},o="card__like-btn_liked",a="modal_opened",i="Saving...",s="Save",c=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error getting user info: ${e.status}`)))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>e.ok?e.json():Promise.reject(`Error editing user info: ${e.status}`)))}editUserAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((e=>e.ok?e.json():Promise.reject(`Error editing user info: ${e.status}`)))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error getting intital cards: ${e.status}`)))}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>e.ok?e.json():Promise.reject(`Error adding card: ${e.status}`)))}deleteCard(e){let{id:t}=e;return fetch(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error deleting card: ${e.status}`)))}changeCardLikeStatus(e){let{id:t,isLiked:r}=e;const n=r?"DELETE":"PUT";return fetch(`${this._baseUrl}/cards/${t}/likes`,{method:n,headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error deleting card: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f7822124-59b5-42fe-a8b8-2f48bd0b923b","Content-Type":"application/json"}}),l=document.querySelector(".profile__edit-btn"),d=document.querySelector(".profile__add-btn"),u=document.querySelector(".profile__name"),m=document.querySelector(".profile__description"),_=document.querySelector(".profile__avatar"),h=document.querySelector(".profile__avatar-btn"),f=document.querySelector("#edit-profile-modal"),v=document.forms["edit-profile-form"],p=v.querySelector(".modal__submit-btn"),y=f.querySelector(".modal__input#name-input"),S=f.querySelector(".modal__input#description-input"),b=document.querySelector("#edit-profile-avatar-modal"),k=document.forms["edit-profile-avatar-form"],g=k.querySelector(".modal__submit-btn"),E=b.querySelector(".modal__input#avatar-link-input"),L=document.querySelector("#new-post-modal"),q=document.forms["new-post-form"],C=q.querySelector(".modal__submit-btn"),x=L.querySelector(".modal__input#image-link-input"),$=L.querySelector(".modal__input#caption-input"),U=document.querySelector("#delete-modal"),j=U.querySelector(".modal__delete-btn"),A=U.querySelector(".modal__cancel-btn"),P=document.querySelector("#preview-modal"),D=P.querySelector(".modal__image"),T=P.querySelector(".modal__caption"),w=document.querySelectorAll(".modal__close-btn"),I=document.querySelector("#card"),B=document.querySelector(".cards__list");let N,O;function J(e){e.classList.add(a),e.focus(),e.addEventListener("click",M),e.addEventListener("keydown",F)}function H(e){e.classList.remove(a),e.removeEventListener("click",M),e.removeEventListener("keydown",F)}function z(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){const t=I.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),a=t.querySelector(".card__like-btn"),i=t.querySelector(".card__delete-btn");return n.src=e.link,n.alt=e.name,r.textContent=e.name,e.isLiked&&a.classList.toggle(o),a.addEventListener("click",(t=>function(e,t){console.log(t),c.changeCardLikeStatus({id:t._id,isLiked:t.isLiked}).then((()=>{e.target.classList.toggle(o)})).catch(console.error)}(t,e))),i.addEventListener("click",(()=>{!function(e,t){N=e,O=t._id,J(U)}(t,e)})),n.addEventListener("click",(()=>{D.src=e.link,T.textContent=e.name,D.alt=e.name,J(P)})),t}(e);B[t](r)}function M(e){e.target.classList.contains(a)&&H(e.target)}function F(e){"Escape"===e.key&&H(e.currentTarget)}var G;l.addEventListener("click",(()=>{var r,n;y.value=u.textContent,S.value=m.textContent,r=v,n=e,[y,S].forEach((e=>t(r,e,n))),J(f)})),v.addEventListener("submit",(function(t){t.preventDefault(),p.textContent=i,n(p,e),c.editUserInfo({name:y.value,about:S.value}).then((e=>{u.textContent=e.name,m.textContent=e.about,H(f)})).catch(console.error).finally((()=>{p.textContent=s}))})),h.addEventListener("click",(()=>{J(b)})),k.addEventListener("submit",(function(e){e.preventDefault(),g.textContent=i,console.log("tesT"),c.editUserAvatar({avatar:E.value}).then((t=>{_.src=t.avatar,e.target.reset(),g.textContent=s,H(b)})).catch(console.error),console.log()})),d.addEventListener("click",(()=>{J(L)})),q.addEventListener("submit",(function(e){e.preventDefault(),C.textContent=i,c.addCard({name:$.value,link:x.value}).then((t=>{z({createdAt:t.createdAt,isLiked:t.isLiked,link:t.link,name:t.name,owner:t.owner,_id:t._id}),e.target.reset(),C.textContent=s,H(L)})).catch(console.error)})),j.addEventListener("click",(function(e){e.preventDefault(),j.textContent="Deleting...",c.deleteCard({id:O}).then((()=>{N.remove(),j.textContent="Delete",H(U)})).catch(console.error)})),A.addEventListener("click",(function(e){e.preventDefault(),H(U)})),w.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>H(t)))})),c.getAppInfo().then((e=>{let[t,r]=e;t.forEach((e=>{z(e,"append")})),u.textContent=r.name,m.textContent=r.about,_.src=r.avatar})).catch(console.error),G=e,document.querySelectorAll(G.formSelector).forEach((e=>((e,o)=>{const a=Array.from(e.querySelectorAll(o.inputSelector)),i=e.querySelector(o.submitButtonSelector);r(a,i,o),e.addEventListener("reset",(()=>{n(i,o)})),a.forEach((n=>{n.addEventListener("input",(()=>{((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),o.textContent=r})(e,r,r.validationMessage,n)})(e,n,o),r(a,i,o)}))}))})(e,G)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,