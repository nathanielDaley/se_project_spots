!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error"},t=(e,t,r)=>{const n=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),n.textContent=""},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?o(t,r):(t.classList.remove(r.inactiveButtonClass),t.disabled=!1)},n=(e,t)=>{e.classList.remove(t.inactiveButtonClass),e.disabled=!1},o=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0};function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?n:r}function i(t,r){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...",s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];r.preventDefault();const c=r.submitter;o(c,e);const d=c.textContent;a(!0,c,d,i),t().then((()=>{r.target.reset()})).catch((t=>{console.error(t),s||n(c,e)})).finally((()=>{a(!1,c,d),s&&n(c,e)}))}const s="card__like-btn_liked",c="modal_opened",d=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error sending fetch request: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editUserAvatar(e){let{avatar:t}=e;return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})})}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}addCard(e){let{name:t,link:r}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){let{id:t}=e;return this._request(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:this._headers})}changeCardLikeStatus(e){let{id:t,isLiked:r}=e;const n=r?"DELETE":"PUT";return this._request(`${this._baseUrl}/cards/${t}/likes`,{method:n,headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f7822124-59b5-42fe-a8b8-2f48bd0b923b","Content-Type":"application/json"}}),l=document.querySelector(".profile__edit-btn"),u=document.querySelector(".profile__add-btn"),m=document.querySelector(".profile__name"),_=document.querySelector(".profile__description"),h=document.querySelector(".profile__avatar"),v=document.querySelector(".profile__avatar-btn"),f=document.querySelector("#edit-profile-modal"),p=document.forms["edit-profile-form"],y=f.querySelector(".modal__input#name-input"),S=f.querySelector(".modal__input#description-input"),b=document.querySelector("#edit-profile-avatar-modal"),q=document.forms["edit-profile-avatar-form"],L=b.querySelector(".modal__input#avatar-link-input"),E=document.querySelector("#new-post-modal"),g=document.forms["new-post-form"],k=E.querySelector(".modal__input#image-link-input"),C=E.querySelector(".modal__input#caption-input"),U=document.querySelector("#delete-modal"),x=document.forms["delete-card-form"],$=U.querySelector(".modal__cancel-btn"),A=document.querySelector("#preview-modal"),I=A.querySelector(".modal__image"),T=A.querySelector(".modal__caption"),w=document.querySelectorAll(".modal__close-btn"),B=document.querySelector("#card"),P=document.querySelector(".cards__list");let D,N;function O(e){e.classList.add(c),e.focus(),e.addEventListener("click",H),e.addEventListener("keydown",R)}function j(e){e.classList.remove(c),e.removeEventListener("click",H),e.removeEventListener("keydown",R)}function J(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){const t=B.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return n.src=e.link,n.alt=e.name,r.textContent=e.name,e.isLiked&&o.classList.toggle(s),o.addEventListener("click",(t=>function(e,t){d.changeCardLikeStatus({id:t._id,isLiked:t.isLiked}).then((()=>{e.target.classList.toggle(s)})).catch(console.error)}(t,e))),a.addEventListener("click",(()=>{!function(e,t){D=e,N=t._id,O(U)}(t,e)})),n.addEventListener("click",(()=>{I.src=e.link,T.textContent=e.name,I.alt=e.name,O(A)})),t}(e);P[t](r)}function H(e){e.target.classList.contains(c)&&j(e.target)}function R(e){"Escape"===e.key&&j(e.currentTarget)}var z;l.addEventListener("click",(()=>{var r,n;y.value=m.textContent,S.value=_.textContent,r=p,n=e,[y,S].forEach((e=>t(r,e,n))),O(f)})),p.addEventListener("submit",(function(e){i((function(){return d.editUserInfo({name:y.value,about:S.value}).then((e=>{m.textContent=e.name,_.textContent=e.about,j(f)}))}),e)})),v.addEventListener("click",(()=>{O(b)})),q.addEventListener("submit",(function(e){i((function(){return d.editUserAvatar({avatar:L.value}).then((e=>{h.src=e.avatar,j(b)}))}),e)})),u.addEventListener("click",(()=>{O(E)})),g.addEventListener("submit",(function(e){i((function(){return d.addCard({name:C.value,link:k.value}).then((e=>{J(e),j(E)}))}),e)})),x.addEventListener("submit",(function(e){i((function(){return d.deleteCard({id:N}).then((()=>{D.remove(),j(U)}))}),e,"Deleting...",!0)})),$.addEventListener("click",(function(e){e.preventDefault(),j(U)})),w.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>j(t)))})),d.getAppInfo().then((e=>{let[t,r]=e;t.forEach((e=>{J(e,"append")})),m.textContent=r.name,_.textContent=r.about,h.src=r.avatar})).catch(console.error),z=e,document.querySelectorAll(z.formSelector).forEach((e=>((e,n)=>{const a=Array.from(e.querySelectorAll(n.inputSelector)),i=e.querySelector(n.submitButtonSelector);r(a,i,n),e.addEventListener("reset",(()=>{o(i,n)})),a.forEach((o=>{o.addEventListener("input",(()=>{((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),o.textContent=r})(e,r,r.validationMessage,n)})(e,o,n),r(a,i,n)}))}))})(e,z)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,