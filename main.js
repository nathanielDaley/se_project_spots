!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error"},t=(e,t,r)=>{const n=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),n.textContent=""},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?a(t,r):(t.classList.remove(r.inactiveButtonClass),t.disabled=!1)},n=(e,t)=>{e.classList.remove(t.inactiveButtonClass),e.disabled=!1},a=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0};function o(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?n:r}function s(t,r){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...",i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];r.preventDefault();const c=r.submitter;a(c,e);const d=c.textContent;o(!0,c,d,s),t().then((()=>{r.target.reset()})).catch((t=>{console.error(t),i||n(c,e)})).finally((()=>{o(!1,c,d),i&&n(c,e)}))}const i="card__like-btn_liked",c="modal_opened",d=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error sending fetch request: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editUserAvatar(e){let{avatar:t}=e;return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})})}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}addCard(e){let{name:t,link:r}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){let{id:t}=e;return this._request(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:this._headers})}changeCardLikeStatus(e){let{id:t,isLiked:r}=e;const n=r?"DELETE":"PUT";return this._request(`${this._baseUrl}/cards/${t}/likes`,{method:n,headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f7822124-59b5-42fe-a8b8-2f48bd0b923b","Content-Type":"application/json"}}),l=document.querySelector(".profile__edit-btn"),u=document.querySelector(".profile__add-btn"),m=document.querySelector(".profile__name"),_=document.querySelector(".profile__description"),h=document.querySelector(".profile__avatar"),v=document.querySelector(".profile__avatar-btn"),f=document.querySelector("#edit-profile-modal"),p=document.forms["edit-profile-form"],y=f.querySelector(".modal__input#name-input"),S=f.querySelector(".modal__input#description-input"),b=document.querySelector("#edit-profile-avatar-modal"),q=document.forms["edit-profile-avatar-form"],L=b.querySelector(".modal__input#avatar-link-input"),g=document.querySelector("#new-post-modal"),E=document.forms["new-post-form"],k=g.querySelector(".modal__input#image-link-input"),C=g.querySelector(".modal__input#caption-input"),U=document.querySelector("#delete-modal"),x=document.forms["delete-card-form"],$=U.querySelector(".modal__cancel-btn"),A=document.querySelector("#preview-modal"),I=A.querySelector(".modal__image"),T=A.querySelector(".modal__caption"),w=document.querySelectorAll(".modal__close-btn"),B=document.querySelector("#card"),P=document.querySelector(".cards__list");let D,N;function O(e){e.classList.add(c),e.focus(),e.addEventListener("click",H),e.addEventListener("keydown",R)}function j(e){e.classList.remove(c),e.removeEventListener("click",H),e.removeEventListener("keydown",R)}function J(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){const t=B.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),a=t.querySelector(".card__like-btn"),o=t.querySelector(".card__delete-btn");return n.src=e.link,n.alt=e.name,r.textContent=e.name,e.isLiked&&a.classList.toggle(i),a.addEventListener("click",(t=>function(e,t){d.changeCardLikeStatus({id:t._id,isLiked:t.isLiked}).then((()=>{e.target.classList.toggle(i)})).catch(console.error)}(t,e))),o.addEventListener("click",(()=>{!function(e,t){D=e,N=t._id,O(U)}(t,e)})),n.addEventListener("click",(()=>{I.src=e.link,T.textContent=e.name,I.alt=e.name,O(A)})),t}(e);P[t](r)}function H(e){e.target.classList.contains(c)&&j(e.target)}function R(e){"Escape"===e.key&&j(e.currentTarget)}var z;l.addEventListener("click",(()=>{var r,n;y.value=m.textContent,S.value=_.textContent,r=p,n=e,[y,S].forEach((e=>t(r,e,n))),O(f)})),p.addEventListener("submit",(function(e){s((function(){return d.editUserInfo({name:y.value,about:S.value}).then((e=>{m.textContent=e.name,_.textContent=e.about,j(f)}))}),e)})),v.addEventListener("click",(()=>{O(b)})),q.addEventListener("submit",(function(e){s((function(){return d.editUserAvatar({avatar:L.value}).then((t=>{h.src=t.avatar,e.target.reset(),j(b)}))}),e)})),u.addEventListener("click",(()=>{O(g)})),E.addEventListener("submit",(function(e){s((function(){return d.addCard({name:C.value,link:k.value}).then((t=>{J(t),e.target.reset(),j(g)}))}),e)})),x.addEventListener("submit",(function(e){s((function(){return d.deleteCard({id:N}).then((()=>{D.remove(),j(U)}))}),e,"Deleting...",!0)})),$.addEventListener("click",(function(e){e.preventDefault(),j(U)})),w.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>j(t)))})),d.getAppInfo().then((e=>{let[t,r]=e;t.forEach((e=>{J(e,"append")})),m.textContent=r.name,_.textContent=r.about,h.src=r.avatar})).catch(console.error),z=e,document.querySelectorAll(z.formSelector).forEach((e=>((e,n)=>{const o=Array.from(e.querySelectorAll(n.inputSelector)),s=e.querySelector(n.submitButtonSelector);r(o,s,n),e.addEventListener("reset",(()=>{a(s,n)})),o.forEach((a=>{a.addEventListener("input",(()=>{((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const a=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),a.textContent=r})(e,r,r.validationMessage,n)})(e,a,n),r(o,s,n)}))}))})(e,z)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,