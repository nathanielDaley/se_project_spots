!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input_type_error"},t=(e,t,r)=>{const n=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),n.textContent=""},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?n(t,r):(t.classList.remove(r.inactiveButtonClass),t.disabled=!1)},n=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0};function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?n:r}function o(t,r){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";r.preventDefault();const s=r.submitter;n(s,e);const i=s.textContent;a(!0,s,i,o),t().then((()=>{r.target.reset()})).catch((t=>{var r,n;console.error(t),n=e,(r=s).classList.remove(n.inactiveButtonClass),r.disabled=!1})).finally((()=>{a(!1,s,i)}))}const s="card__like-btn_liked",i="modal_opened",c=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error sending fetch request: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editUserAvatar(e){let{avatar:t}=e;return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})})}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}addCard(e){let{name:t,link:r}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){let{id:t}=e;return this._request(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:this._headers})}changeCardLikeStatus(e){let{id:t,isLiked:r}=e;const n=r?"DELETE":"PUT";return this._request(`${this._baseUrl}/cards/${t}/likes`,{method:n,headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f7822124-59b5-42fe-a8b8-2f48bd0b923b","Content-Type":"application/json"}}),d=document.querySelector(".profile__edit-btn"),l=document.querySelector(".profile__add-btn"),u=document.querySelector(".profile__name"),m=document.querySelector(".profile__description"),_=document.querySelector(".profile__avatar"),h=document.querySelector(".profile__avatar-btn"),v=document.querySelector("#edit-profile-modal"),f=document.forms["edit-profile-form"],p=v.querySelector(".modal__input#name-input"),y=v.querySelector(".modal__input#description-input"),S=document.querySelector("#edit-profile-avatar-modal"),b=document.forms["edit-profile-avatar-form"],q=S.querySelector(".modal__input#avatar-link-input"),L=document.querySelector("#new-post-modal"),g=document.forms["new-post-form"],E=L.querySelector(".modal__input#image-link-input"),k=L.querySelector(".modal__input#caption-input"),C=document.querySelector("#delete-modal"),U=document.forms["delete-card-form"],x=C.querySelector(".modal__cancel-btn"),$=document.querySelector("#preview-modal"),A=$.querySelector(".modal__image"),I=$.querySelector(".modal__caption"),T=document.querySelectorAll(".modal__close-btn"),w=document.querySelector("#card"),B=document.querySelector(".cards__list");let P,D;function N(e){e.classList.add(i),e.focus(),e.addEventListener("click",J),e.addEventListener("keydown",H)}function O(e){e.classList.remove(i),e.removeEventListener("click",J),e.removeEventListener("keydown",H)}function j(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){const t=w.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),a=t.querySelector(".card__like-btn"),o=t.querySelector(".card__delete-btn");return n.src=e.link,n.alt=e.name,r.textContent=e.name,e.isLiked&&a.classList.toggle(s),a.addEventListener("click",(t=>function(e,t){c.changeCardLikeStatus({id:t._id,isLiked:t.isLiked}).then((()=>{e.target.classList.toggle(s)})).catch(console.error)}(t,e))),o.addEventListener("click",(()=>{!function(e,t){P=e,D=t._id,N(C)}(t,e)})),n.addEventListener("click",(()=>{A.src=e.link,I.textContent=e.name,A.alt=e.name,N($)})),t}(e);B[t](r)}function J(e){e.target.classList.contains(i)&&O(e.target)}function H(e){"Escape"===e.key&&O(e.currentTarget)}var R;d.addEventListener("click",(()=>{var r,n;p.value=u.textContent,y.value=m.textContent,r=f,n=e,[p,y].forEach((e=>t(r,e,n))),N(v)})),f.addEventListener("submit",(function(e){o((function(){return c.editUserInfo({name:p.value,about:y.value}).then((e=>{u.textContent=e.name,m.textContent=e.about,O(v)}))}),e)})),h.addEventListener("click",(()=>{N(S)})),b.addEventListener("submit",(function(e){o((function(){return c.editUserAvatar({avatar:q.value}).then((t=>{_.src=t.avatar,e.target.reset(),O(S)}))}),e)})),l.addEventListener("click",(()=>{N(L)})),g.addEventListener("submit",(function(e){o((function(){return c.addCard({name:k.value,link:E.value}).then((t=>{j(t),e.target.reset(),O(L)}))}),e)})),U.addEventListener("submit",(function(e){o((function(){return c.deleteCard({id:D}).then((()=>{P.remove(),O(C)}))}),e,"Deleting...")})),x.addEventListener("click",(function(e){e.preventDefault(),O(C)})),T.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>O(t)))})),c.getAppInfo().then((e=>{let[t,r]=e;t.forEach((e=>{j(e,"append")})),u.textContent=r.name,m.textContent=r.about,_.src=r.avatar})).catch(console.error),R=e,document.querySelectorAll(R.formSelector).forEach((e=>((e,a)=>{const o=Array.from(e.querySelectorAll(a.inputSelector)),s=e.querySelector(a.submitButtonSelector);r(o,s,a),e.addEventListener("reset",(()=>{n(s,a)})),o.forEach((n=>{n.addEventListener("input",(()=>{((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const a=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),a.textContent=r})(e,r,r.validationMessage,n)})(e,n,a),r(o,s,a)}))}))})(e,R)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,